openapi: 3.0.0
info:
  title: Dish API
  version: 1.0.0
  description: API endpoints for managing dishes

components:
  schemas:
    DishCategory:
      type: string
      enum:
        - APPETIZER
        - SALAD
        - MAIN_COURSE
        - DESSERT
        - BURGERS
        - TEA
        - SODA
        - JUICE
        - COFFEE
        - OTHER
    DishType:
      type: string
      enum:
        - FOOD
        - DRINK

paths:
  /multimedia/upload:
    post:
      summary: Upload an image
      description: Uploads a single image to Cloudinary. Accepts only .jpg, .jpeg, .png, and .webp formats.
      tags:
        - Multimedia
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
                  description: Image file to upload (.jpg, .jpeg, .png, .webp)
      responses:
        '201':
          description: Image uploaded successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Image uploaded successfully
                  data:
                    type: string
                    example: https://res.cloudinary.com/your_cloud/image/upload/v1234567890/images/sample.jpg
        '400':
          description: Invalid request or unsupported file type
        '500':
          description: Internal server error

  /dish/only/{id}:
    get:
      summary: Get a dish by ID
      tags:
        - Dish
      parameters:
        - name: id
          in: path
          description: ID of the dish
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Dish retrieved successfully
        '404':
          description: Dish not found
        '500':
          description: Server error

  /dish/all:
    get:
      summary: Get all dishes
      tags:
        - Dish
      responses:
        '200':
          description: List of dishes retrieved successfully
        '500':
          description: Server error

  /dish/create:
    post:
      summary: Create a new dish
      tags:
        - Dish
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - price
                - type
                - category
                - prepTime
              properties:
                name:
                  type: string
                description:
                  type: string
                price:
                  type: number
                isAvailable:
                  type: boolean
                category:
                  $ref: '#/components/schemas/DishCategory'
                type:
                  $ref: '#/components/schemas/DishType'
                imageUrl:
                  type: string
                prepTime:
                  type: integer
              example:
                name: "Pique Macho"
                description: "Plato típico boliviano con carne, papas y huevo"
                price: 35.5
                isAvailable: true
                category: "MAIN_COURSE"
                type: "FOOD"
                imageUrl: "https://ejemplo.com/imagen.jpg"
                prepTime: 25
      responses:
        '201':
          description: Dish created successfully
        '400':
          description: Missing required fields
        '409':
          description: Duplicate dish name
        '500':
          description: Server error

  /dish/update/{id}:
    patch:
      summary: Update an existing dish
      description: >
        Permite actualizar un platillo existente.  
        **No es necesario enviar todos los campos en el body**; solo se actualizarán los campos que se incluyan.
      tags:
        - Dish
      parameters:
        - name: id
          in: path
          description: ID of the dish to update
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                price:
                  type: number
                isAvailable:
                  type: boolean
                category:
                  $ref: '#/components/schemas/DishCategory'
                type:
                  $ref: '#/components/schemas/DishType'
                imageUrl:
                  type: string
                prepTime:
                  type: integer
              example:
                name: "Salteñas"
                price: 10.5
                isAvailable: true
                category: "APPETIZER"
                type: "FOOD"
      responses:
        '200':
          description: Dish updated successfully
        '400':
          description: Invalid type or category
        '409':
          description: Duplicate dish name
        '500':
          description: Server error

  /dish/delete/{id}:
    delete:
      summary: Delete a dish by ID
      tags:
        - Dish
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the dish to delete
      responses:
        '200':
          description: Dish deleted successfully
        '500':
          description: Server error
